#! /bin/sh

# Auteur : Pierre Brochard (pierre.brochard.1982@m4x.org)
# Date : 2019
# License : See the LICENSE file in this repository.

. "$(dirname $0)/pbinclude"

xhelp () {
    mygt 'Launch this script in the directory including alreadey cloned slackware64 or slackware64-current.\nIt can be on the bootable slackware install USB stick.\npbslacks should also be there.'|sed 's@\\n@\n@g'
    echo
    echo '  > cd .../Slackware-x64-date'
    echo 'or> cd /run/media/$USER/USBSLACKINS/SlackDVD'
    echo '  > pbslacks/pbupgrade [-new (no system update)]'
    echo '       [-test (test only, no actions)] [-help|-h] [-nodial]'
    echo '       [-post (actions to do preferably after a postinstall reboot)]'
}

XNEW=
XPOST=

while [ $# -ge 1 ] ;do
    MYARG="$1"
    if [ "$MYARG" = "-new" ] ;then
	XNEW=yes
    elif [ "$MYARG" = "-nodial" ] ;then
	ISDIAL=0
    elif [ "$MYARG" = "-test" ] ;then
	XTEST=1
    elif [ "$MYARG" = "-post" ] ;then
	XPOST=yes
    elif [ "$MYARG" = "-help" -o "$MYARG" = "-h" ] ;then
	xhelp
	exit 0
    fi
    shift
done

XTEMPOUT=$(mktemp -p /tmp -t pbupgradeout.XXXXXX)
XTEMPMES=$(mktemp -p /tmp -t pbupgrademes.XXXXXX)

cleanup () {
    rm -f $XTEMPOUT
    rm -f $XTEMPMES
}

trap 'echo "*** Ctrl-C caught -- aborting operations ***"; cleanup; exit 1' 2 14 15 # trap Ctrl-C and kill

if [ ! -d /boot ] ;then
    mygt "Do the install of the Slackware Linux distribution before :\n-see the doc/SLACKWARE.txt file." |sed 's@\\n@\n@g' > $XTEMPMES
fi

if [ $XTEST -ne 1 ] ;then
    if [ -d slackware64-current ] ;then
	cd slackware64-current
    fi
    if [ ! -d slackware64 -o '(' ! -h pbslacks -a ! -d pbslacks ')' ] ;then
	echo 'slackware64 or pbslacks not found.'> $XTEMPMES
	xhelp >> $XTEMPMES
    fi
fi

if [ -s "$XTEMPMES" ] ;then
    dialog --colors --title 'End messages' --msgbox "$(cat $XTEMPMES)" 20 85
    exit 1
fi

MYPWD=$(pwd)
HOMESLACK="$MYPWD"

if [ "$XNEW" = 'yes' ] ;then
    XUPSYSTEM=off
else
    XUPSYSTEM=on
fi

if [ "$XPOST" = 'yes' ] ;then
    XUPNOPOST=off
    XUPPOST=on
    XUPSYSTEM=off
else
    XUPPOST=off
    XUPNOPOST=on
fi

xmaster () {
    defitem=$1;shift
    xsel1=$1;shift;xsel2=$1;shift;xsel3=$1;shift;xsel4=$1;shift;xsel5=$1;shift
    xsel6=$1;shift;xsel7=$1;shift;xsel8=$1;shift;xsel9=$1;shift;xsel10=$1;shift
    xsel11=$1;shift;xsel12=$1;shift;xsel13=$1;shift
    pactit=$(mygt 'Main menu')
    pactit="pbupgrade: $pactit"
    dialog --colors --title "$pactit" --default-item $defitem --defaultno \
	--separate-output --item-help --help-button --help-status --checklist \
	'Choose your actions below after you have launch the \Zbpbaspire*\ZB script' 0 100 13 \
	system 'Sync/Update system to the last fetched current Slackware' $xsel1 system \
	compat32 'Install/Update the 32 bits compatible mode' $xsel2 compat32 \
	mozilla 'Install/Update the Firefox and Thunderbird softwares' $xsel3 mozilla \
	packages 'Install/Update the packages set of software' $xsel4 packages \
	packages2 'Install/Update the packages2 set of software' $xsel5 packages2 \
	packages3 'Install/Update the packages3 set of software' $xsel6 packages3 \
	packages4 'Install/Update the packages4 set of software' $xsel7 packages4 \
	frameworks 'Install/Update the KDE5 frameworks libraries' $xsel8 frameworks \
	audacity 'Install/Update the Audacity software' $xsel9 audacity \
	tesseract4 'Install/Update the Tesseract version 4 software' $xsel10 tesseract4 \
	bumblebee 'Install/Update the Bumblebee support of your second NVIDIA graphic card' $xsel11 bumblebee \
	recreate 'Compile again some packages.' $xsel12 recreate \
	recreatebumblebee 'Compile again Bumblebee packages.' $xsel13 recreatebumblebee
}

xpacaide () {
    packages="$1"
    pacaide="Update the $packages set of tools :"
    ls -1 "$packages/"*.t?z > $XTEMPMES
    while read j;test "$j" != "" ;do
	pacaide="${pacaide}\n$j"
    done < $XTEMPMES
    rm -f $XTEMPMES
}

xsel="$XUPSYSTEM $XUPNOPOST $XUPNOPOST $XUPNOPOST $XUPNOPOST $XUPNOPOST \
$XUPNOPOST $XUPNOPOST $XUPNOPOST $XUPNOPOST $XUPPOST $XUPPOST $XUPPOST"
ditem=system
bclaide=1

while [ $bclaide -eq 1 ] ;do
    xmaster $ditem $xsel 2> $XTEMPOUT
    bclaide=$(cat $XTEMPOUT|grep '^HELP'|wc -l)
    if [ $bclaide -eq 1 ] ;then
	xitem="$(cat $XTEMPOUT|grep '^HELP'|cut -d ' ' -f2)"
	xsel=
	for i in system compat32 mozilla packages packages2 packages3 packages4 \
	    frameworks audacity tesseract4 bumblebee recreate recreatebumblebee ;do
	  if [ $(grep "^$i$" "$XTEMPOUT"|wc -l) -eq 1 ] ;then
	      xsel="$xsel on"
	  else
	      xsel="$xsel off"
	  fi
	done
	ditem=$xitem;bclaide=1;pacaide=
	if [ "$xitem" = system ] ;then
	    pacaide='Upgrade your Slackware system with the last current fetched\nUses Slackpkg.'
	elif [ "$xitem" = compat32 ] ;then
	    pacaide='Upgrade the Alien Bob 32 bits compatible mode.'
	elif [ "$xitem" = mozilla ] ;then
	    pacaide='Upgrade the Firefox and Thunderbird products.\nThey should be downloaded and put in the packages/Mozilla directory before.'
	elif [ "$(echo "$xitem"|cut -c1-8)" = packages ] ;then
	    xpacaide "$xitem"
	elif [ "$xitem" = frameworks ] ;then
	    xpacaide packages4/frameworks
	elif [ "$xitem" = audacity ] ;then
	    xpacaide packages4/audacity
	elif [ "$xitem" = tesseract4 ] ;then
	    xpacaide packages4/tesseract4
	elif [ "$xitem" = bumblebee ] ;then
	    pacaide='Upgrade your Bumblebee packages if they are in sync with the upgraded Slackware.\nDone on another machine for exemple.'
	elif [ "$xitem" = recreate ] ;then
	    pacaide='Redo the packages which are here in sources form.\nIf not already done on this machine or another.'
	elif [ "$xitem" = recreatebumblebee ] ;then
	    pacaide='Redo the Bumblebee packages.\nIf not already done on this machine or another.\nYou should reboot after upgrading system packages and before doing this action else the Bumblebee packages wont built.'
	fi
	dialog --colors --title "$xitem" --msgbox "$pacaide" 20 80
    fi
done

DACTION=$(mygt 'Actions which were done')

if [ $XTEST -ne 1 ] ;then
    if [ ! $UID = 0 ]; then
        mygt 'This script must be done as root. Exit.' > $XTEMPMES
        dialog --colors --title "$DACTION" --msgbox "$(cat $XTEMPMES)" 20 80
	cleanup
	exit 1
    fi
fi

XEND=0
ISSYSTEM="$(cat $XTEMPOUT|grep '^system$'|wc -l)"
ISCOMPAT="$(cat $XTEMPOUT|grep '^compat32$'|wc -l)"
ISMOZ="$(cat $XTEMPOUT|grep '^mozilla$'|wc -l)"
ISPACK="$(cat $XTEMPOUT|grep '^packages$'|wc -l)"
ISPACK2="$(cat $XTEMPOUT|grep '^packages2$'|wc -l)"
ISPACK3="$(cat $XTEMPOUT|grep '^packages3$'|wc -l)"
ISPACK4="$(cat $XTEMPOUT|grep '^packages4$'|wc -l)"
ISFRAME="$(cat $XTEMPOUT|grep '^frameworks$'|wc -l)"
ISAUDACITY="$(cat $XTEMPOUT|grep '^audacity$'|wc -l)"
ISTESS="$(cat $XTEMPOUT|grep '^tesseract4$'|wc -l)"
ISBUMBLE="$(cat $XTEMPOUT|grep '^bumblebee$'|wc -l)"
ISRECRE="$(cat $XTEMPOUT|grep '^recreate$'|wc -l)"
ISRECREBUMBLE="$(cat $XTEMPOUT|grep '^recreatebumblebee$'|wc -l)"

if [ $ISSYSTEM -eq 1 ] ;then
    if [ $XTEST -ne 1 ] ;then
	cp pbslacks/Slackpkg/blacklist /etc/slackpkg
	cp pbslacks/Slackpkg/slackpkg.conf /etc/slackpkg
	cat pbslacks/Slackpkg/mirrors | sed "s@HOMESLACK@${HOMESLACK}@" \
					    > /etc/slackpkg/mirrors
	slackpkg update gpg
	slackpkg update
	slackpkg install-new
	slackpkg upgrade-all
	slackpkg clean-system

	if [ $? -ne 0 ] ;then
	    rm -f $XTEMPOUT
	    which slackpkg 2> $XTEMPMES
	    mygt 'Abort : see previous errors.' >> $XTEMPMES
	    XEND=1
	    break
	fi
    fi
    mygt "Upgrade system done." >> $XTEMPMES
fi
if [ $ISCOMPAT -eq 1 ] ;then
    if [ $XTEST -ne 1 ] ;then
	upgradepkg --reinstall --install-new current/*.t?z
	upgradepkg --install-new current/slackware64-compat32/*/*.t?z
    fi
    mygt "Upgrade Alien Bob multilib done." >> $XTEMPMES
fi
if [ $ISMOZ -eq 1 ] ;then
    if [ $XTEST -ne 1 ] ;then
	$HOMESLACK/pbslacks/pbupgrademoz
    fi
    mygt "Upgrade Mozilla done." >> $XTEMPMES
fi
if [ $ISPACK -eq 1 ] ;then
    if [ $XTEST -ne 1 ] ;then
	upgradepkg --install-new packages/*.t?z
	upgradepkg --install-new packages/compat32/*.t?z
    fi
    mygt "Upgrade packages done." >> $XTEMPMES
fi
if [ $ISPACK2 -eq 1 ] ;then
    if [ $XTEST -ne 1 ] ;then
	upgradepkg --install-new packages2/*.t?z
	upgradepkg --install-new --reinstall packages2/*master*.t?z
    fi
    mygt "Upgrade packages2 done." >> $XTEMPMES
fi
if [ $ISPACK3 -eq 1 ] ;then
    if [ $XTEST -ne 1 ] ;then
	upgradepkg --install-new packages3/*.t?z
    fi
    mygt "Upgrade packages3 done." >> $XTEMPMES
fi
if [ $ISPACK4 -eq 1 ] ;then
    if [ $XTEST -ne 1 ] ;then
	upgradepkg --install-new packages4/*.t?z
    fi
    mygt "Upgrade packages4 done." >> $XTEMPMES
fi
if [ $ISFRAME -eq 1 ] ;then
    if [ $XTEST -ne 1 ] ;then
	upgradepkg --install-new packages4/frameworks/*.t?z
	upgradepkg --install-new --reinstall packages4/*master*.t?z
    fi
    mygt "Upgrade frameworks done." >> $XTEMPMES
fi
if [ $ISAUDACITY -eq 1 ] ;then
    if [ $XTEST -ne 1 ] ;then
	upgradepkg --install-new packages4/audacity/*.t?z
    fi
    mygt "Upgrade audacity done." >> $XTEMPMES
fi
if [ $ISTESS -eq 1 ] ;then
    if [ $XTEST -ne 1 ] ;then
	upgradepkg --install-new packages4/tesseract4/*.t?z
	cp packages4/tesseract4/xsane2tess* /usr/bin
    fi
    mygt "Upgrade tesseract4 done." >> $XTEMPMES
fi
if [ $ISBUMBLE -eq 1 ] ;then
    if [ $XTEST -ne 1 ] ;then
	$HOMESLACK/pbslacks/pbupgradebumblebee
    fi
    mygt "Upgrade Bumblebee done." >> $XTEMPMES
fi
if [ $ISRECRE -eq 1 ] ;then
    if [ $XTEST -ne 1 ] ;then
	$HOMESLACK/pbslacks/pbcompilepost
    fi
    mygt "Recreate source packages done." >> $XTEMPMES
fi
if [ $ISRECREBUMBLE -eq 1 ] ;then
    if [ $XTEST -ne 1 ] ;then
	$HOMESLACK/pbslacks/pbcompilebumblebee
    fi
    mygt "Recreate source Bumblebee done." >> $XTEMPMES
fi

if [ ! -f "$XTEMPMES" -o ! -s "$XTEMPMES" ] ;then
    mygt "No action was demanded. Exit." > $XTEMPMES
    XEND=1
fi

dialog --colors --title "$DACTION" --msgbox "$(cat $XTEMPMES)" 20 80

if [ $XEND -eq 1 ] ;then
    cleanup
    exit 0
fi

cleanup

if [ $ISSYSTEM -eq 1 ] ;then
# Only if system was modified
    if [ -d /boot/efi/EFI/Slackware ] ;then
	xitem=elilo
    elif [ -f /boot/grub/grub.cfg ] ;then
	xitem=grub
    elif [ -f /etc/lilo.conf ] ;then
	xitem=lilo
    elif [ -f /syslinux.cfg ] ;then
	xitem=syslinux
    else
	xitem=none
    fi
    dialog --colors --title 'Bootloader menu' --defaultno --default-item $xitem \
	--menu 'We have detected the bootloader below. Cancel if it is not true.\nIn this last case, you should recreate the config of your bootloader before reboot. Else you will have to boot from another media as a DVD or an USB stick and rerun the install of your bootloader.' 15 80 5 \
	elilo 'Boot Elilo : /boot/efi/EFI/Slackware' \
	grub 'Boot Grub : /boot/grub/grub.cfg' \
	lilo 'Boot Lilo : /etc/lilo.conf' \
	syslinux 'Boot Syslinux : /syslinux.cfg' \
	none 'No bootloader detected. Reconfigure your bootloader before reboot.' \
	2> $XTEMPOUT
    xitem=$(cat $XTEMPOUT)

    xmes1 () {
cat <<EOF
\ZbThe boot loader was not updated.\ZB
If lilo is installed, launch : \Z3/sbin/lilo\Zn
If Grub is installed, launch : \Z3grub-mkconfig -o /boot/grub/grub.cfg\Zn
If Syslinux is installed, launch : \Z3syslinux BOOTDEVICE\Zn
If Boot UEFI ELILO is installed, do :
  \Z3cp /boot/vmlinuz /boot/initrd.gz /boot/efi/EFI/Slackware\Zn

\ZbOr rerun your other favorite bootloader install procedure before rebooting.\ZB
EOF
    }

    if [ "$xitem" = elilo -a -d /boot/efi/EFI/Slackware ] ;then
	echo "Elilo updated : Files vmlinuz et initrd.gz copied in \Z3/boot/efi/EFI/Slackware\Zn" >> $XTEMPMES
	if [ $XTEST -ne 1 ] ;then
	    cp /boot/vmlinuz /boot/initrd.gz /boot/efi/EFI/Slackware
	fi
    elif [ "$xitem" = grub -a -f /boot/grub/grub.cfg ] ;then
	echo "Grub updated : \Z3grub-mkconfig\Zn relaunched.\n\Z1Look if there are error messages below\Zn." >> $XTEMPMES
	if [ $XTEST -ne 1 ] ;then
	    grub-mkconfig -o /boot/grub/grub.cfg 2>> $XTEMPMES
	fi
    elif [ "$xitem" = lilo -a -f /etc/lilo.conf ] ;then
	echo "Lilo updated with \Z3/sbin/lilo\Zn.\n\Z1Look if there are error messages below\Zn." >> $XTEMPMES
	if [ $XTEST -ne 1 ] ;then
	    /sbin/lilo 2>> $XTEMPMES
	fi
    elif [ "$xitem" = syslinux -a -f /syslinux.cfg ] ;then
	echo "Look at \Z3/syslinux.cfg\Zn and rerun \Z3syslinux\Zn on your boot partition if some path have changed." >> $XTEMPMES
    else
	xmes1 >> $XTEMPMES
    fi

    if [ -f "$XTEMPMES" ] ;then
	dialog --colors --title 'Bootloader upgraded' --msgbox "$(cat $XTEMPMES)" 20 80
    fi

    cleanup
fi

if [ "$XNEW" != 'yes' ] ;then
    XBOOTMES=' (\Z1be sure to have updated the bootloader before\Zn)'
else
    XBOOTMES=
fi

xend () {
cat <<EOF
Reboot the host${XBOOTMES}.

\ZbThen do if not already done on an already upgraded target :\ZB
 Select '\Z3recreate\Zn' in the above menu after launching this script again.
 or do> \Z3pbslacks/pbcompilepost\Zn

\ZbIf your host is a dual graphic card laptop with a NVIDIA card :\ZB
  \Z4Do either :\Zn
    Select '\Z3recreatebumblebee\Zn' in the above menu after launching this script again.
    or do> \Z3pbslacks/pbcompilebumblebee\Zn
  \Z4Or do only if already done on an upgraded target :\Zn
    Select '\Z3bumblebee\Zn' in the above menu after launching this script again.
    or do> \Z3pbslacks/pbupgradebumblebee\Zn
EOF
}

xend >> $XTEMPMES

if [ -f "$XTEMPMES" ] ;then
    dialog --colors --title 'End messages' --msgbox "$(cat $XTEMPMES)" 20 80
fi
rm -f $XTEMPMES
