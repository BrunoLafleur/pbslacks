#!/bin/bash

# Copyright 2006, 2007, 2008, 2009, 2010, 2012, 2017, 2018  Patrick J. Volkerding, Sebeka, MN, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Modified by Pierre Brochard (pierre.brochard.1982@m4x.org)

cd $(dirname $0) ; CWD=$(pwd)

PKGNAM=poppler-qt4
SRCNAM=poppler
VERSION=${VERSION:-$(echo $SRCNAM-*.tar.?z* | rev | cut -f 3- -d . | cut -f 1 -d - | rev)}
BUILD=${BUILD:-1}
TAG=${TAG-_SBo}

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) export ARCH=i586 ;;
    arm*) export ARCH=arm ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
       *) export ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PKGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}"
  exit 0
fi

NUMJOBS=${NUMJOBS:-" -j$(expr $(nproc) + 1) "}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "s390" ]; then
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-${PKGNAM}
OUTPUT=${OUTPUT:-/tmp}

rm -rf $PKG
mkdir -p $TMP $PKG

cd $TMP || exit 1
rm -rf ${PKGNAM}-${VERSION}
tar xvf $CWD/${SRCNAM}-$VERSION.tar.?z* || exit 1
cd ${SRCNAM}-$VERSION || exit 1

chown -R root:root .
find . \
 \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;

# Patch to reinclude QT4 with new Poppler API.
xzcat $CWD/poppler_qt4.patch.xz | patch -p1 --verbose || exit 1

# Apply upstream patches to fix regressions:
zcat $CWD/2ed4cd66401bc1d9683c94238e9024218d7be3ba.patch.gz | patch -p1 --verbose || exit 1
zcat $CWD/d7aa275b0bca86ae174e7e504dd269df2a0234cf.patch.gz | patch -p1 --verbose || exit 1

mkdir build
cd build

CXXFLAGS="$SLKCFLAGS -std=c++11 -fpermissive" \
cmake \
  -DCMAKE_INSTALL_PREFIX=/usr \
  -DCMAKE_INSTALL_MANDIR=/usr/man \
  -DBUILD_SHARED_LIBS=ON \
  -DENABLE_QT4=ON \
  -DENABLE_QT5=OFF \
  -DENABLE_XPDF_HEADERS=ON \
  -DENABLE_CMS=lcms2 \
  -DENABLE_DCTDECODER=libjpeg \
  -DENABLE_GTK_DOC=ON \
  -DENABLE_LIBOPENJPEG=openjpeg2 \
  -DENABLE_XPDF_HEADERS=ON \
  -DENABLE_UNSTABLE_API_ABI_HEADERS=ON \
  -DENABLE_ZLIB=ON \
  -DBUILD_QT4_TESTS=NO \
  .. || exit 1

make $NUMJOBS || make || exit 1
make install DESTDIR=$PKG || exit 1

# Don't ship .la files:
rm -f $PKG/{,usr/}lib${LIBDIRSUFFIX}/*.la

# Back to source tarball root directory:
cd ..

# Remove files that overlap with poppler qt5 :
rm -rf $PKG/usr/bin $PKG/usr/man $PKG/usr/share/gtk-doc
rm -f $PKG/usr/include/poppler/*
for i in cpp fofi glib splash goo ;do
    rm -rf $PKG/usr/include/poppler/$i
done
rm -rf $PKG/usr/lib64/girepository-1.0/
rm -f $PKG/usr/lib64/pkgconfig/poppler-cpp.pc
rm -f $PKG/usr/lib64/pkgconfig/poppler-glib.pc
rm -f $PKG/usr/lib64/pkgconfig/poppler.pc
rm -f $PKG/usr/lib64/libpoppler-cpp.so*
rm -f $PKG/usr/lib64/libpoppler-glib.so*
rm -f $PKG/usr/lib64/libpoppler.so*

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null

mkdir -p $PKG/usr/doc/${PKGNAM}-$VERSION
cp -a AUTHORS COPYING* INSTALL NEWS README* TODO \
  $PKG/usr/doc/${PKGNAM}-$VERSION
( cd $PKG/usr/doc/${PKGNAM}-$VERSION
  ln -s /usr/share/gtk-doc/html/poppler html )

# If there's a ChangeLog, installing at least part of the recent history
# is useful, but don't let it get totally out of control:
if [ -r ChangeLog ]; then
  DOCSDIR=$(echo $PKG/usr/doc/${PKGNAM}-$VERSION)
  cat ChangeLog | head -n 1000 > $DOCSDIR/ChangeLog
  touch -r ChangeLog $DOCSDIR/ChangeLog
fi

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/${PKGNAM}-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}
