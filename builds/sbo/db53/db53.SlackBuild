#!/bin/bash

# Copyright 2008, 2009, 2010, 2012, 2018  Patrick J. Volkerding, Sebeka, Minnesota, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PKGNAM=db53
VERSION=5.3.28
SRCVERSION=5.3_5.3.28+dfsg1.orig
DEBIAN=db5.3_5.3.28+dfsg1-0.8.debian
BUILD=${BUILD:-4}
TAG=${TAG:-_PB}

NUMJOBS=${NUMJOBS:-" -j$(expr $(nproc) + 1) "}

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) export ARCH=i586 ;;
    arm*) export ARCH=arm ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
       *) export ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PKGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}"
  exit 0
fi

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "s390" ]; then
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

TMP=${TMP:-/tmp/PB}
PKG=$TMP/package-$PKGNAM
OUTPUT=${OUTPUT:-/tmp}

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf db-$VERSION
tar xvf $CWD/db${SRCVERSION}.tar.xz || exit 1
tar xvf $CWD/${DEBIAN}.tar.xz || exit 1
cd db-$VERSION || exit 1
cat ../debian/patches/series| while read i;test "$i" != "" ;do
  echo "$i"
  cat ../debian/patches/"$i" | patch -p1
done

chown -R root:root .
find . \
  \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
  -exec chmod 755 {} \; -o \
  \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
  -exec chmod 644 {} \;

rm -rf build-dir
mkdir build-dir
cd build-dir

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
../dist/configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --enable-shared \
  --enable-cxx \
  --enable-compat185 \
  --disable-test \
  --build=$ARCH-slackware-linux || exit 1

make $NUMJOBS || make || exit 1
make install DESTDIR=$PKG || exit 1

# Don't ship .la files:
rm -f $PKG/{,usr/}lib${LIBDIRSUFFIX}/*.la

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | \
  grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

# Remove WAY TOO LARGE (and misplaced) docs:
# This can be fixed with "docdir=/usr/doc/$PKGNAM-$VERSION" passed to make
# but there's not really a good reason to do that given they'll be removed
rm -rf $PKG/usr/docs
mkdir -p $PKG/usr/doc/db-$VERSION
cp -a \
  ../LICENSE ../README \
  $PKG/usr/doc/db-$VERSION
cat << EOF > $PKG/usr/doc/db-$VERSION/README-DOCS

  For a ton of additional documentation (too large to include
  here) on writing source code that uses libdb$PKGNAM, please see
  the original source tarball db-$VERSION.tar.xz, which can be found
  on Oracle's web site:

  http://www.oracle.com/technetwork/products/berkeleydb/overview/index.html

EOF

# Move include files:
( cd $PKG/usr/include
  mkdir $PKGNAM
  mv *.h $PKGNAM
  for file in $PKGNAM/* ; do
    ln -sf $file .
  done
)

# Rename binaries to avoid overlap:
( cd $PKG/usr/bin
  mv berkeley_db_svc berkeley_db${PKGNAM}_svc
  for file in db_* ; do
    mv $file ${PKGNAM}_`echo $file | cut -f 2- -d _`
  done
)

# Put libdb-5.3.so into /lib${LIBDIRSUFFIX} since it might be needed
# before /usr is mounted (eg, nsswitch.conf can be set up to
# use databases instead of flat files)
mkdir -p $PKG/lib${LIBDIRSUFFIX}
mv $PKG/usr/lib${LIBDIRSUFFIX}/libdb-5.3.so $PKG/lib${LIBDIRSUFFIX}/libdb-5.3.so
( cd $PKG/usr/lib${LIBDIRSUFFIX}
  ln -sf /lib${LIBDIRSUFFIX}/libdb-5.3.so .
)

# Some things might look for these libraries by other names.
( cd $PKG/usr/lib${LIBDIRSUFFIX}
  ln -sf libdb-5.3.a libdb-5.a
  ln -sf libdb-5.3.a libdb5.a
  ln -sf libdb-5.3.a libdb.a
  ln -sf libdb_cxx-5.3.a libdb_cxx-5.a
  ln -sf libdb_cxx-5.3.a libdb_cxx.a
  ln -sf libdb-5.3.so libdb5.so
  ln -sf libdb-5.3.so libdb.so
)

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PKGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}
