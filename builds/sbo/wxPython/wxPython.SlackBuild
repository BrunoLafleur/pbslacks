#!/bin/sh

# Slackware build script for wxPython

# Copyright 2007-2011 Heinz Wiesinger, Amsterdam, The Netherlands
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=wxPython
VERSION=2.8.12.1
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

# Gnomeprint support
if [ "${GNOMEPRINT:-no}" = "no" ]; then
    do_gp="without"
else
    do_gp="with"
fi

if [ "$ARCH" = "i486" -o "$ARCH" = "i586" -o "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=$ARCH -mtune=i686 -m32 -Wno-narrowing"
  LIBDIRSUFFIX=""
  PKG_CONFIG_PATH=/usr/lib/pkgconfig:$PKG_CONFIG_PATH;export PKG_CONFIG_PATH
  WXCONFIG_CFLAGS="$SLKCFLAGS";export WXCONFIG_CFLAGS
  WXCONFIG_CXXFLAGS="$SLKCFLAGS";export WXCONFIG_CXXFLAGS
  sed -i 's=#error "LONG_BIT =#warning "LONG_BIT =' \
      /usr/include/python2.7/pyport.h
  PATH=/usr/bin/32:$PATH;export PATH
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC -Wno-narrowing"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2 -Wno-narrowing"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-src-$VERSION
tar xvf $CWD/$PRGNAM-src-$VERSION.tar.bz2
cd $PRGNAM-src-$VERSION
chown -R root:root .
chmod -R u+w,go+r-w,a-s .

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
LDFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/usr \
  --sysconfdir=/etc \
  --localstatedir=/var \
  --disable-static \
  --with-sdl \
  --with-opengl \
  --$do_gp-gnomeprint \
  --enable-unicode \
  --enable-graphics_ctx \
  --enable-display \
  --enable-mediactrl \
  --enable-sound \
  --libdir=/usr/lib$LIBDIRSUFFIX \
  --build=$ARCH-slackware-linux

make

#Additional stuff from contrib
make -C contrib/src/gizmos
make -C contrib/src/ogl
make -C contrib/src/stc

make install DESTDIR=$PKG
make -C contrib/src/gizmos install DESTDIR=$PKG
make -C contrib/src/ogl install DESTDIR=$PKG
make -C contrib/src/stc install DESTDIR=$PKG

cd wxPython
  python2 setup.py \
    WXPORT=gtk2 \
    UNICODE=1 \
    EP_ADD_OPTS=1 \
    EP_FULL_VER=0 \
    WX_CONFIG="$TMP/$PRGNAM-src-$VERSION/wx-config --no_rpath" \
    build_ext --include-dirs=$TMP/$PRGNAM-src-$VERSION/lib/wx/include/gtk2-unicode-release-2.8 \
              --library-dirs=$TMP/$PRGNAM-src-$VERSION/lib \
              --rpath=/usr/lib$LIBDIRSUFFIX \
    build

  python2 setup.py \
    WXPORT=gtk2 \
    UNICODE=1 \
    EP_ADD_OPTS=1 \
    EP_FULL_VER=0 \
    WX_CONFIG="$TMP/$PRGNAM-src-$VERSION/wx-config --prefix=$PKG/usr/bin/ --no_rpath" \
    SYS_WX_CONFIG="wx-config --enable-unicode" \
    build_ext --include-dirs=$TMP/$PRGNAM-src-$VERSION/lib/wx/include/gtk2-unicode-release-2.8 \
              --library-dirs=$TMP/$PRGNAM-src-$VERSION/lib \
              --rpath=/usr/lib$LIBDIRSUFFIX \
    install --root=$PKG
cd -

# install wxPython includes
[ -d include/wx-2.8/wx/wxPython ] && \
    cp -rf include/wx-2.8/wx/wxPython $PKG/usr/include/wx-2.8/wx/

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION/wxPython
cp -a README.1st.txt docs* $PKG/usr/doc/$PRGNAM-$VERSION
cp -a wxPython/docs/* $PKG/usr/doc/$PRGNAM-$VERSION/wxPython
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild
# Remove unnecessary docs
cd $PKG/usr/doc/$PRGNAM-$VERSION/docs
  rm -rf cocoa latex mac metrowerks microwin msw palmos word
cd -

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
