#!/bin/bash
# $Id: MPlayer.SlackBuild,v 1.27 2012/07/01 13:07:08 root Exp root $
# Copyright 2006, 2007, 2008, 2010, 2011, 2012  Eric Hameleers, Eindhoven, NL
# Copyright 2013, 2018  Patrick J. Volkerding, Sebeka, MN, USA
# All rights reserved.
#
#   Permission to use, copy, modify, and distribute this software for
#   any purpose with or without fee is hereby granted, provided that
#   the above copyright notice and this permission notice appear in all
#   copies.
#
#   THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
#   WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#   MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
#   IN NO EVENT SHALL THE AUTHORS AND COPYRIGHT HOLDERS AND THEIR
#   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#   LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
#   USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
#   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
#   OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
#   OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
#   SUCH DAMAGE.

# Modified by Pierre Brochard (pierre.brochard.1982@m4x.org)

cd $(dirname $0) ; SRCDIR=$(pwd)

PKGNAM=MPlayer2020
SRCNAM=MPlayer
VERSION=${VERSION:-20200103}
BUILD=${BUILD:-1}
TAG=${TAG:-_PB}

NUMJOBS=${NUMJOBS:-" -j$(expr $(nproc) + 1) "}
DOCS="AUTHORS Changelog Copyright LICENSE README VERSION DOCS/HTML DOCS/tech"

# The default skin to use (we need to add at least one)
SKIN="$SRCDIR/Blue-1.13.tar.bz2"

# Available languages: all cs de en es fr hu it pl ru zh_CN
LANGUAGES="en,de,es,fr"

# Automatically determine the architecture we're building on:
MARCH=$( uname -m )
if [ -z "$ARCH" ]; then
  case "$MARCH" in
    i?86)    export ARCH=i586 ;;
    armv7hl) export ARCH=$MARCH ;;
    arm*)    export ARCH=arm ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
    *)       export ARCH=$MARCH ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PKGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}"
  exit 0
fi

if [ "$ARCH" = "x86_64" ]; then
  LIBDIRSUFFIX="64"
  # --enable-runtime-cpudetection is supported only for x86, x86_64, and PPC
  EXTRACONFIGUREOPTIONS="--enable-runtime-cpudetection"
elif [ "$ARCH" = "i486" -o \
       "$ARCH" = "i586" -o \
       "$ARCH" = "i686" ]; then
  LIBDIRSUFFIX=""
  # --enable-runtime-cpudetection is failing on 32-bit, so we'll set -march=i586
  # manually after ./configure.
  #EXTRACONFIGUREOPTIONS="--enable-runtime-cpudetection"
  EXTRACONFIGUREOPTIONS=""
else
  LIBDIRSUFFIX=""
  EXTRACONFIGUREOPTIONS=""
fi

# If this package is being built for ALSA (no PulseAudio), use the _alsa $TAG:
if [ ! -r /usr/lib${LIBDIRSUFFIX}/pkgconfig/libpulse.pc ]; then
  TAG="${TAG}_alsa"
fi

# Where the WIN32 codecs are expectedfor instance
CODECSDIR=/usr/lib${LIBDIRSUFFIX}/codecs

# ---------------------------------------------------------------------------
# -- PATENT ALERT! --
# MPLayer can be built with AMR audio encoders
# (needed for FLV and .3GP videos) but these libraries are 'contaminated'
# with patents from 3GPP.
# Also, the AAC encoder has patent issues.
# You can build these patended algorithms into ffmpeg, and if you are an
# ordinary end user, no one will bother you for using them.
# For the binaries based on this SlackBuild that I distribute, it is a
# different story. I am not allowed to distribute binary packages that
# incorporate patented code. So here you go. My Slackware package was
# built with "USE_PATENTS=NO" i.e. without using
# the faac, AMR and dvdcss libraries.
# ---------------------------------------------------------------------------
USE_PATENTS=${USE_PATENTS:-"YES"}

# MPlayer will try to use one of the TrueType fonts present on the target
# system for it's On Screen Display (OSD) font.
# Slackware 11.0 ships with the Vera and DejaVu fonts, you may want to add
# more fonts to this list. The first font found will be used by creating a
# symbolic link "/usr/share/mplayer/subfont.ttf" to it.
# The use of bitmapped fonts is considered deprecated, but you can still use
# those if you want. Read http://www.mplayerhq.hu/DOCS/HTML/en/fonts-osd.html
# if you want to know more about OSD font configuration.
OSDFONTS="LiberationSans-Regular.ttf \
          Arialuni.ttf arial.ttf \
          DejaVuSans.ttf Vera.ttf"

# Where do we look for sources?
cd $(dirname $0) ; SRCDIR=$(pwd)

# Place to build (TMP) package (PKG) and output (OUTPUT) the program:
TMP=${TMP:-/tmp/build}
PKG=$TMP/package-$PKGNAM
OUTPUT=${OUTPUT:-/tmp}

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $SRCNAM-$VERSION

tar xvf $SRCDIR/$SRCNAM-$VERSION.tar.?z* || exit 1
cd $SRCNAM-$VERSION || exit 1

chown -R root:root .
find . \
 \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \+ -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \+

# Determine what X we're running (the modular X returns the prefix
# in the next command, while older versions stay silent):
XPREF=$(pkg-config --variable=prefix x11) || true
[ "$XPREF" == "" ] && XPREF='/usr/X11R6'

# Remove support for patent encumbered and possibly illegal code:
if [ "$USE_PATENTS" != "YES" ]; then
  DO_PATENTED="--disable-libopencore_amrnb \
               --disable-libopencore_amrwb"
else
  DO_PATENTED=""
fi

# fix building against samba 4
zcat $SRCDIR/include-samba-4.0.patch.gz | patch -p1 --verbose || exit 1
zcat $SRCDIR/avformat.patch.gz | patch -p0 --verbose || exit 1

echo Building ...
# MPlayer wants to automatically determine compiler flags,
# so we don't provide CFLAGS.
./configure \
  --prefix=/opt/${PKGNAM} \
  --mandir=/opt/${PKGNAM}/man \
  --confdir=/opt/${PKGNAM}/etc/mplayer \
  --enable-gui \
  --enable-menu \
  --enable-vdpau \
  --disable-arts \
  --disable-ossaudio \
  --disable-bitmap-font \
  --disable-ffmpeg_a \
  --codecsdir=${CODECSDIR} \
  --language="${LANGUAGES}" \
  ${EXTRACONFIGUREOPTIONS} \
  ${DO_PATENTED} \
  2>&1 | tee $OUTPUT/configure-${PKGNAM}.log

# So that MPlayer does not report "UNKNOWN" as it's version:
if [ ! -f VERSION ]; then
  echo $VERSION > VERSION
fi

# Set -march/-mtune manually since runtime cpu detection causes a compile error
# on 32-bit x86:
if [ "$ARCH" = "i586" ]; then
  sed -i "s/march=native/march=i586/g" config.mak
  sed -i "s/mtune=native/mtune=generic/g" config.mak
fi

make $NUMJOBS 2>&1 | tee $OUTPUT/make-${PKGNAM}.log
make DESTDIR=$PKG install 2>&1 |tee $OUTPUT/install-${PKGNAM}.log

# Build the html documentation (not all languages are available):
if [ "$LANGUAGES" = "all" ]; then
  # make html-chunked
  make html-single
else
  for i in $(echo $LANGUAGES | tr , ' ') ; do
    # make html-chunked-$i ;
    make html-single-$i ;
  done
fi

# Prepare the configfile:
mkdir -p $PKG/opt/${PKGNAM}/etc/mplayer
cp etc/example.conf $PKG/opt/${PKGNAM}/etc/mplayer/mplayer.conf.new

# Install our default skin:
cd $PKG/opt/${PKGNAM}/share/mplayer/skins
tar -xvf $SKIN
chown -R root:root *
chmod -R u+w,go+r-w,a+X-s *
ln -s ${DEFSKIN} default
cd -

# Add this to the doinst.sh:
mkdir -p $PKG/install
cat <<EOINS >> $PKG/install/doinst.sh
# Handle the incoming configuration files:
config() {
  for infile in \$1; do
    NEW="\$infile"
    OLD="\`dirname \$NEW\`/\`basename \$NEW .new\`"
    # If there's no config file by that name, mv it over:
    if [ ! -r \$OLD ]; then
      mv \$NEW \$OLD
    elif [ "\`cat \$OLD | md5sum\`" = "\`cat \$NEW | md5sum\`" ]; then
      # toss the redundant copy
      rm \$NEW
    fi
    # Otherwise, we leave the .new copy for the admin to consider...
  done
}

# Installing a bitmap font is considered deprecated; use a TTF font instead.
# We try to link to an installed TTF font at install time.
# Configure a default TrueType font to use for the OSD :
if [ ! -f opt/${PKGNAM}/share/mplayer/subfont.ttf ]; then
  for font in ${OSDFONTS}; do
    if [ -f .${XPREF}/lib${LIBDIRSUFFIX}/X11/fonts/TTF/\${font} ]; then
      ( cd opt/${PKGNAM}/share/mplayer/
        ln -sf ${XPREF}/lib${LIBDIRSUFFIX}/X11/fonts/TTF/\${font} subfont.ttf
      )
      break
    fi
  done
fi

# Prepare the new configuration file
config opt/${PKGNAM}/etc/mplayer/mplayer.conf.new

# Update the desktop database:
if [ -x usr/bin/update-desktop-database ]; then
  chroot . /usr/bin/update-desktop-database opt/${PKGNAM}/share/applications 1> /dev/null 2> /dev/null
fi

# Update hicolor theme cache:
if [ -e usr/share/icons/hicolor/icon-theme.cache ]; then
  if [ -x usr/bin/gtk-update-icon-cache ]; then
    chroot . /usr/bin/gtk-update-icon-cache opt/${PKGNAM}/share/icons/hicolor >/dev/null 2>&1
  fi
fi

# Update the mime database:
if [ -x usr/bin/update-mime-database ]; then
  chroot . /usr/bin/update-mime-database opt/${PKGNAM}/share/mime >/dev/null 2>&1
fi

EOINS

# Add documentation:
mkdir -p $PKG/usr/doc/$PKGNAM-$PKGVERSION
cp -a $DOCS $PKG/usr/doc/$PKGNAM-$PKGVERSION || true
cp -a $SRCDIR/$(basename $0) $PKG/usr/doc/$PKGNAM-$PKGVERSION/$PKGNAM.SlackBuild

mv $PKG/opt/${PKGNAM}/doc/$PKGNAM-$PKGVERSION/HTML $PKG/usr/doc/$PKGNAM-$PKGVERSION/html

# Save a sample of all configuration files:
for i in opt/${PKGNAM}/etc/*.conf ; do
  cp $i $PKG/usr/doc/$PKGNAM-$PKGVERSION/$(basename $i)-sample
done

# Save a transcript of all configured options for this specific build:
if [ -n $OUTPUT/configure-${PKGNAM}.log ]; then
  cat $OUTPUT/configure-${PKGNAM}.log \
    | sed -n "/^Config files successfully generated/,/^'config.h' and 'config.mak' contain your configuration options./p" \
    > $PKG/usr/doc/$PKGNAM-$PKGVERSION/${PKGNAM}.configuration
fi

find $PKG/usr/doc -type f -exec chmod 644 {} \+

# Compress the man page(s):
if [ -d $PKG/opt/${PKGNAM}/man ]; then
  find $PKG/opt/${PKGNAM}/man -type f -name "*.?" -exec gzip -9f {} \+
  for i in $(find $PKG/opt/${PKGNAM}/man -type l -name "*.?") ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done
fi

# Strip binaries:
( find $PKG | xargs file | grep -e "executable" -e "shared object" \
  | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null )

# Add a package description:
mkdir -p $PKG/install
cat $SRCDIR/slack-desc > $PKG/install/slack-desc

if [ -f $SRCDIR/doinst.sh ]; then
  cat $SRCDIR/doinst.sh >> $PKG/install/doinst.sh
fi

# Build the package:
cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PKGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}
