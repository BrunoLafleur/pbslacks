#! /bin/sh

# Auteur : Pierre Brochard (pierre.brochard.1982@m4x.org)
# Date : 2019
# License : See the LICENSE file in this repository.

# Use at your own risk. The autodetected partition is the last VFAT one.
# Be sure it is not your hard drive.

# Plug an USB stick
# And lauch this script without plug another one in the meantime.
# This script will :
#   -guess the device name of the USB stick.
#   -reformat the partition given for the USB stick (or answer ynof below).
#   -put the current slackware local tree on it (without the source packages).

# Or put an ISO Slackware image on the USB stick (better than uses pbmakeiso2usb
# because the resulting USB stick is writable and keep her original size).

# You can launch this script as a normal user in the plugdev group.
# Use fdisk and udisksctl.

xhelp () {
    cat <<EOF
  Script a lancer dans le repertoire contenant slackware64-current deja aspire
et qui contient pbslacks.
  Launch this script in the directory including slackware64-current and which
contains pbslacks.

> pbslacks/pbmakeusb [-iso slack.iso] [-gpart gparted.iso] [-noudisks2]
                     [-noslack (no packages copy on the stick)]
EOF
}

MYPWD=$(pwd)
XTEST=0
ISO=0
REPO="$MYPWD/slackware64-current"
REPISO=Linuxiso
GPARTISO=
FULLINSTALLER=1
ISDIAL=1
[ x$(which dialog 2> /dev/null) = 'x' ] && ISDIAL=0
NOUDISKS2=
[ x$(which udisksctl 2> /dev/null) = 'x' ] && NOUDISKS2='-noudisks2'
ISASK=0

nodialog () {
    echo '------------------------------------'
    echo "  $1"
    echo '------------------------------------'
    cat "$2"
}

while [ $# -ge 1 ] ;do
    MYARG="$1"
    shift
    if [ "$MYARG" = "-test" ] ;then
	XTEST=1
    elif [ "$MYARG" = "-nodial" ] ;then
	ISDIAL=0
    elif [ "$MYARG" = "-noudisks2" ] ;then
	NOUDISKS2='-noudisks2'
    elif [ "$MYARG" = "-noslack" ] ;then
	FULLINSTALLER=0
    elif [ "$MYARG" = "-help" -o "$MYARG" = "-h" ] ;then
	xhelp
	exit 0
    elif [ "$MYARG" = "-iso" ] ;then
	IMGISO="$(cd $(dirname $1); pwd)/$(basename $1)";cd "$MYPWD"
	shift
    elif [ "$MYARG" = "-gpart" ] ;then
	GPARTISO="$(cd $(dirname $1); pwd)/$(basename $1)";cd "$MYPWD"
	GPARTISO="-gpart $GPARTISO"
	shift
    elif [ "$MYARG" = "-ask" ] ;then
	ISASK=1
    fi
done

if [ $ISASK -eq 1 ] ;then
    if [ $ISDIAL -eq 1 ] ;then
	XTEMPOUT=$(mktemp -p /tmp -t pbsetupout.XXXXXX)
	dialog --colors --title 'ISO Slackware file' --defaultno \
	    --menu 'Give the name of an ISO Slackware file or nothing if the Slackware is on the current directory :'  \
	    15 80 5 none 'current directory' \
	    $(ls -1 "$REPISO/Slackware-x64-"*.iso 2> /dev/null|\
	    sed 's@^\(.*Slackware-x64-\)\(.*\)\.iso$@\2 \1\2.iso@') \
	    2> $XTEMPOUT
	res=$(cat $XTEMPOUT)
	c=;[ "$res" != 'none' -a "$res" != '' ] && \
	    c="$REPISO/Slackware-x64-${res}.iso"
	rm -f $XTEMPOUT
    else
	echo "Give the name of an ISO Slackware file or nothing if the"
	echo "Slackware is on the current directory :"
	ls -1 "$REPISO/Slackware-x64-"*.iso 2> /dev/null|\
	    sed 's@^\(.*Slackware-x64-\)\(.*\)\.iso$@\2 \1\2.iso@'
	read c
	[ "$c" != '' ] && c="$REPISO/Slackware-x64-${res}.iso"
    fi
    if [ "$c" != '' ] ;then
	IMGISO="$(cd $(dirname $c); pwd)/$(basename $c)";cd "$MYPWD"
    fi

    if [ $ISDIAL -eq 1 ] ;then
	XTEMPOUT=$(mktemp -p /tmp -t pbsetupout.XXXXXX)
	dialog --colors --title 'ISO GParted file' --defaultno \
	    --menu 'Give the name of an ISO GParted file or nothing :'  \
	    15 80 5 none 'no GParted Live' \
	    $(ls -1 "$REPISO/gparted-live-"*.iso 2> /dev/null|\
	    sed 's@^\(.*gparted-live-\)\(.*\)\.iso$@\2 \1\2.iso@') \
	    2> $XTEMPOUT
	res=$(cat $XTEMPOUT)
	c=;[ "$res" != 'none' -a "$res" != '' ] && \
	    c="$REPISO/gparted-live-${res}.iso"
	rm -f $XTEMPOUT
    else
	echo "Give the name of an ISO GParted file or nothing :"
	ls -1 "$REPISO/gparted-live-"*.iso 2> /dev/null|\
	    sed 's@^\(.*gparted-live-\)\(.*\)\.iso$@\2 \1\2.iso@'
	read c
	[ "$c" != '' ] && c="$REPISO/gparted-live-${c}.iso"
    fi
    if [ "$c" != '' ] ;then
	GPARTISO="$(cd $(dirname $c); pwd)/$(basename $c)";cd "$MYPWD"
	GPARTISO="-gpart $GPARTISO"
    fi
fi

if [ "$IMGISO" != '' ] ;then
    BIMG=$(basename "$IMGISO")
    BIMGISO=$(basename "$IMGISO" .iso)
    [ "$BIMG" != "$BIMGISO" ] && ISO=1
fi

if [ ! $UID = 0 -a $XTEST -ne 1 ]; then
    cat << EOF
This script must be run as root.
EOF
    exit 1
fi

XTEMPMES=$(mktemp -p /tmp -t pbsetupmes.XXXXXX)

cleanup () {
    cd "$MYPWD"
    if [ $ISO -eq 1 ] ;then
	if [ "$NOUDISKS2" != '' ] ;then
	    [ ! -z "$REPO" ] && ( [ ! -z "$XLOOP" ] &&
		(umount "${XLOOP}p1";losetup -d $XLOOP);rmdir "$REPO")
	else
	    [ ! -z "$XLOOP" ] && (udisksctl unmount -b "${XLOOP}p1";
		udisksctl loop-delete -b "$XLOOP")
	fi
    fi
    rm -f $XTEMPMES
}

ISERR=0

if [ $ISO -eq 1 ] ;then
    if [ "$NOUDISKS2" != '' ] ;then
	XLOOP=$(losetup -f 2> /dev/null);losetup $XLOOP "$IMGISO" 2> $XTEMPMES
	REPO=$(mktemp -d -p /tmp -t pbmakeusb.XXXXXX)
	mount -t vfat "${XLOOP}p1" "$REPO" 2>> $XTEMPMES
    else
	XLOOP=$(udisksctl loop-setup -f "$IMGISO"|sed 's@^.* \(.*\)\.$@\1@')
	REPO=$(udisksctl mount -b "${XLOOP}p1" 2> $XTEMPMES|cut -d ' ' -f4-|\
	    sed 's@^\(.*\)\.$@\1@')
    fi
    if [ $? -ne 0 -o "$REPO" = '' ] ;then
	ISERR=1
	cat <<EOF >> $XTEMPMES
------------------------------------
Directory not mounted.
Is your ISO file a Slackware image ?
EOF
    else
	cat <<EOF > $XTEMPMES
For the iso $IMGISO :
  The loop device is : $XLOOP
  The mount dir is : $REPO
EOF
    fi
    DACTION='Iso mounted status'
fi

if [ $ISERR -eq 0 ] ;then
    DACTION='Directory status'
    if [ ! -d "$REPO" ] ;then
	ISERR=1
	echo 'Directory slackware64-current not found.' > $XTEMPMES
	xhelp >> $XTEMPMES
    elif [ ! -h pbslacks -a ! -d pbslacks ] ;then
	ISERR=1
	echo 'Directory pbslacks not found.' > $XTEMPMES
	xhelp >> $XTEMPMES
    elif [ $ISO -eq 0 ] ;then
	echo 'Directory slackware64-current found.' > $XTEMPMES
    fi
fi

if [ $ISDIAL -eq 1 ] ;then
    dialog --colors --title "$DACTION" --msgbox "$(cat $XTEMPMES)" 20 85
else
    nodialog "$DACTION" $XTEMPMES
fi
trap 'echo "*** Ctrl-C caught -- aborting operations ***"; cleanup; exit 1' 2 14 15 # trap Ctrl-C and kill

if [ $ISERR -eq 1 ] ;then
    cleanup
    exit 1
fi

###############################################
# Go to the source repository.
###############################################
cd "$REPO"

###############################################
# Grab the USB stick.
###############################################
DACTION='Grab the USB stick.'
DUAL='dual '
[ "$GPARTISO" = '' ] && DUAL=
echo "Put your writable USB stick on an USB port and press OK or Enter." \
    > $XTEMPMES
echo "------------------------------------" >> $XTEMPMES
echo "It will be erased and replaced by a ${DUAL}boot media :" >> $XTEMPMES
echo "  -with a Slackware installation media" >> $XTEMPMES
if [ "$GPARTISO" != '' ] ;then
    echo "  -with a GParted Live media" >> $XTEMPMES
fi

if [ $ISDIAL -eq 1 ] ;then
    dialog --colors --title "$DACTION" --msgbox "$(cat $XTEMPMES)" 20 80
else
    nodialog "$DACTION" $XTEMPMES
    read c
fi

sleep 3
MYDEVNAME=$(/sbin/fdisk -l 2> /dev/null| tail -12 | grep ' /dev/[a-z]'|\
	sed 's@^.*\(/dev/[a-z]*\).*$@\1@')
MYRDEV=$(echo $MYDEVNAME|cut -c 6-)
MYTEST=$(dmesg|tail -10|grep $MYRDEV 2> /dev/null|wc -l)
[ $MYTEST -lt 1 ] && MYDEVNAME=

if [ "$MYDEVNAME" = '' ] ;then
    DACTION='Confirm USB stick.'
    DMES='USB stick not found.'
    if [ $ISDIAL -eq 1 ] ;then
	echo "$DMES" > $XTEMPMES
	echo "------------------------------------" >> $XTEMPMES
	/sbin/fdisk -l 2> /dev/null >> $XTEMPMES
	dialog --colors --title "$DACTION" --msgbox "$(cat $XTEMPMES)" 20 80
    else
	/sbin/fdisk -l 2> /dev/null > $XTEMPMES
	echo "------------------------------------" >> $XTEMPMES
	echo "$DMES" >> $XTEMPMES
	nodialog "$DACTION" $XTEMPMES
    fi
    cleanup
    exit 1
fi

if [ $ISDIAL -eq 1 ] ;then
    XTEMPOUT=$(mktemp -p /tmp -t pbsetupout.XXXXXX)
    dialog --colors --title 'Do the USB stick' --defaultno --clear \
	--msgbox "$(/sbin/fdisk -l 2> /dev/null||sed 's@\\n@\n@')\n" 20 80 \
	--and-widget --colors --title 'Do the USB stick' --defaultno \
	--menu "The device name for your writable erasable USB stick is $MYDEVNAME.\nIs this correct ?"  \
	15 80 5 n 'no' y 'yes' a 'yes and no format' \
	b 'yes and no format and no packages copy' 2> $XTEMPOUT
    c=$(cat $XTEMPOUT)
    rm -f $XTEMPOUT
else
    /sbin/fdisk -l 2> /dev/null
    cat <<EOF
------------------------------------
The device name for your writable erasable USB stick is $MYDEVNAME.
Is this correct ?
y(es), n(o), a (yes and noformat), b (yes and no format and no packages copy) :
EOF
    read c
fi

if [ "$c" = 'a' ] ;then
    c=y
    FORMAT=
elif [ "$c" = 'b' ] ;then
    c=y
    FORMAT=
    FULLINSTALLER=0
else
    FORMAT=-f
fi

if [ $FULLINSTALLER -eq 1 -a "$REPO" != '' ]; then
    OPTREPO='-s '"$REPO"
else
    OPTREPO=
fi

if [ "$c" = 'y' -a "$MYDEVNAME" != '' ] ;then
    echo "$MYPWD/pbslacks/pbimg2disk launched."
    if [ $XTEST -ne 1 ] ; then
	cd usb-and-pxe-installers
	"$MYPWD/pbslacks/pbimg2disk" $FORMAT -i "$(pwd)/usbboot.img" \
	    -o "$MYDEVNAME" $OPTREPO $NOUDISKS2 $GPARTISO
    fi
fi

cleanup
