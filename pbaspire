#! /bin/sh

# Auteur : Pierre Brochard (pierre.brochard.1982@m4x.org)
# Date : 2019
# License : See the LICENSE file in this repository.

XTEST=

xhelp () {
    echo "Script a lancer dans un repertoire nouvelle cree"
    echo "  ou existant contenant slackware64-current."
    echo
    echo "Launch this script in a new directory."
    echo "  or in a directory which contains slackware64-current."
    echo
    echo "pbslacks should be side by side of this current directory."
    echo "> ../pbslacks/pbaspire"
}

while [ $# -ge 1 ] ;do
    MYARG="$1"
    if [ "$MYARG" = "-test" ] ;then
	XTEST=yes
    elif [ "$MYARG" = "-help" ] ;then
	xhelp
	exit 0
    fi
    shift
done

if [ "$XTEST" != 'yes' -a "$0" != '../pbslacks/pbaspire' -a "$0" != 'pbslacks/pbaspire' ] ;then
    xhelp
    exit 1
fi

MYPWD=$(pwd)
XTEMPOUT=$(mktemp -p /tmp -t pbaspireout.XXXXXX)
XTEMPMES=$(mktemp -p /tmp -t pbaspiremes.XXXXXX)

xmaster () {
    defitem=$1;shift
    xsel1=$1;shift;xsel2=$1;shift;xsel3=$1;shift;xsel4=$1;shift;xsel5=$1;shift
    xsel6=$1
    dialog --colors --title 'Main menu' --default-item $defitem --defaultno \
	--separate-output --item-help --help-button --help-status --checklist \
	'Choose your actions below' 0 100 6 \
	init 'Init/Verify the repository.' $xsel1 init \
	core 'Get/Update versus officiel Slackware, multilib and frameworks KDE5' $xsel2 core \
	alien 'Get/Update some Alien Bob binary packages' $xsel3 alien \
	ponce 'Get/Update some Ponce binary packages' $xsel4 ponce \
	slonly 'Get/Update some Slackonly binary packages' $xsel5 slonly \
	other 'Get/Update some other source or binary packages' $xsel6 other
}

xsel="on on on on on on on"
ditem=init
bclaide=1

while [ $bclaide -eq 1 ] ;do
    xmaster $ditem $xsel 2> $XTEMPOUT
    bclaide=$(cat $XTEMPOUT|grep '^HELP'|wc -l)
    if [ $bclaide -eq 1 ] ;then
	xitem="$(cat $XTEMPOUT|grep '^HELP'|cut -d ' ' -f2)"
	xsel=
	for i in init core alien ponce slonly other ;do
	  if [ $(grep "^$i$" "$XTEMPOUT"|wc -l) -eq 1 ] ;then
	      xsel="$xsel on"
	  else
	      xsel="$xsel off"
	  fi
	done
	ditem=$xitem;bclaide=1;pacaide=
	if [ "$xitem" = init ] ;then
	    pacaide='Initialize or verify the current repository.'
	elif [ "$xitem" = core ] ;then
	    pacaide='Get or update the officiel lastest current Slackware.'
	    pacaide="$pacaide\nAnd the multilib of Alien Bob which is a 32 bits compatibility set of packages."
	    pacaide="$pacaide\nAnd the frameworks libraries of Kde5 offered by Alien Bob."
	elif [ "$xitem" = alien ] ;then
	    pacaide='Get or update some Alien Bob binary packages.'
	elif [ "$xitem" = ponce ] ;then
	    pacaide='Get or update some Ponce binary packages.'
	elif [ "$xitem" = slonly ] ;then
	    pacaide='Get or update some Slackonly binary packages.'
	elif [ "$xitem" = other ] ;then
	    pacaide='Get or update some other source or binary packages.'
	fi
	dialog --colors --title "$xitem" --msgbox "$pacaide" 20 80
    fi
done

while read i;test "$i" != "" ;do
    if [ "$(echo $i|cut -c1-4)" = 'HELP' ] ;then
	continue
    elif [ "$i" = init ] ;then
	if [ "$XTEST" != 'yes' ] ;then
	    "$0"init
	fi
	echo "Initialisation done : \Z3"$0"init\Zn." >> $XTEMPMES
    elif [ "$i" = core ] ;then
	if [ "$XTEST" != 'yes' ] ;then
	    "$0"core
	fi
	echo "Get/Upgrade core system done : \Z3"$0"core\Zn." >> $XTEMPMES
    elif [ "$i" = alien ] ;then
	if [ "$XTEST" != 'yes' ] ;then
	    "$0"alien
	fi
	echo "Get/Upgrade Alien Bob packages done : \Z3"$0"alien\Zn." >> $XTEMPMES
    elif [ "$i" = ponce ] ;then
	if [ "$XTEST" != 'yes' ] ;then
	    "$0"ponce
	fi
	echo "Get/Upgrade Ponce packages done : \Z3"$0"ponce\Zn." >> $XTEMPMES
    elif [ "$i" = slonly ] ;then
	if [ "$XTEST" != 'yes' ] ;then
	    "$0"slonly
	fi
	echo "Get/Upgrade Slackonly packages done : \Z3"$0"slonly\Zn." >> $XTEMPMES
    elif [ "$i" = other ] ;then
	if [ "$XTEST" != 'yes' ] ;then
	    "$0"other
	fi
	echo "Get/Upgrade other source or binary packages done : \Z3"$0"other\Zn." >> $XTEMPMES
    fi
done < $XTEMPOUT

rm -f $XTEMPOUT

if [ ! -f "$XTEMPMES" -o $(cat "$XTEMPMES"|wc -c) -eq 0 ] ;then
    echo "No action was demanded. Exit." > $XTEMPMES
fi

dialog --colors --title 'Actions which were done' --msgbox "$(cat $XTEMPMES)" 20 80
rm -f $XTEMPMES
