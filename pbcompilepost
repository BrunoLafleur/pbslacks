#! /bin/sh

# Auteur : Pierre Brochard (pierre.brochard.1982@m4x.org)
# Date : 2019
# License : See the LICENSE file in this repository.

# Recompilations a faire apres reboot.

. "$(dirname $0)/pbinclude"

if [ ! $UID = 0 ]; then
    mygt 'This script must be done as root. Exit.'
    exit 1
fi

xhelp () {
    mygt 'Launch this script in the directory including packages, packages2 et al.'
}

if [ ! -d packages -o ! -d packages2 -o ! -d packages3 -o ! -d packages4 ] ;then
    xhelp
    exit 1
fi

MYUSER=produits
MYGROUP=users
RECOMP=1
ISALL=1
ISPAC1=0
ISPAC2=0
ISPAC3=0
ISPAC4=0
ISCHROMIUM=0
ISOPENSHOT=0
ISAUDACITY=0
ISARDOUR=0

while [ $# -ge 1 ] ;do
    MYARG="$1"
    if [ "$MYARG" = "-u" ] ;then
	shift
	MYUSER="$1"
    elif [ "$MYARG" = "-g" ] ;then
	shift
	MYGROUP="$1"
    elif [ "$MYARG" = "-norecomp" ] ;then
        RECOMP=0
    elif [ "$MYARG" = "-ispac1" ] ;then
	ISPAC1=1;ISALL=0
    elif [ "$MYARG" = "-ispac2" ] ;then
	ISPAC2=1;ISALL=0
    elif [ "$MYARG" = "-ispac3" ] ;then
	ISPAC3=1;ISALL=0
    elif [ "$MYARG" = "-ispac4" ] ;then
	ISPAC4=1;ISALL=0
    elif [ "$MYARG" = "-ischromium" ] ;then
	ISCHROMIUM=1;ISALL=0
    elif [ "$MYARG" = "-isopenshot" ] ;then
	ISOPENSHOT=1;ISALL=0
    elif [ "$MYARG" = "-isaudacity" ] ;then
	ISAUDACITY=1;ISALL=0
    elif [ "$MYARG" = "-isardour" ] ;then
	ISARDOUR=1;ISALL=0
    elif [ "$MYARG" = "-help" -o "$MYARG" = "-h" ] ;then
	xhelp
	exit 0
    fi
    shift
done

if [ $ISALL -eq 1 ] ;then
    ISPAC1=1
    ISPAC2=1
    ISPAC3=1
    ISPAC4=1
    ISCHROMIUM=1
    ISOPENSHOT=1
    ISAUDACITY=1
    ISARDOUR=1
fi

mygt 'Only after a system update and reboot.\nIf already done on this or another machine, this script is not useful.\nPress a touch for continue or abort.'|sed 's@\\n@\n@g'
read c

# ===========================================================
# Some helper functions.

xpurgetmp () {
    pac="$1"
    rm -f /tmp/"${pac}-"*.t?z
    rm -rf /tmp/"${pac}-"*
    rm -rf /tmp/*/"${pac}-"*
    rm -rf /tmp/package-"$pac"
    rm -rf /tmp/*/package-"$pac"
}

xmakealienpac () {
    XDIR="$1"
    pac="$2"
    dest="$3"
    [ -z "$dest" ] && dest="$XDIR"
    if [ $RECOMP -eq 1 -a -d "${XDIR}/$pac" ] ;then
	(
	    cd "${XDIR}/$pac"
	    sh "./${pac}.SlackBuild"
	    if [ $? -ne 0 ] ;then
		mygt 'Correct this error and relaunch this script.'
		exit 1
	    fi
	)
	cp "/tmp/${pac}-"[0-9]*.t?z "$dest"
	chown ${MYUSER}.$MYGROUP "$dest/${pac}"-[0-9]*.t?z
	chown -R ${MYUSER}.$MYGROUP "$dest/$pac"
	xpurgetmp "$pac"
        upgradepkg --install-new --reinstall "$dest/${pac}"-[0-9]*.t?z
    fi
}

xmakepac () {
    XDIR="$1"
    XPAC="$2"
    XSUB="$3"

    if [ $RECOMP -eq 1 ] ;then
	(
	    cd ${XDIR}/$XPAC
	    tar xvfz ${XPAC}.t*gz
	    if [ -d "$XPAC" ] ;then
		(
		    cd $XPAC;ln -sf ../* .;rm -f $XPAC ${XPAC}.tar.gz
		    ./${XPAC}.SlackBuild
		    if [ $? -ne 0 ] ;then
			mygt 'Correct this error and relaunch this script.'
			exit 1
		    fi
		)
		rm -rf $XPAC
	    fi
	)
	cp /tmp/${XPAC}-[0-9]*.t?z $XDIR
	chown ${MYUSER}.$MYGROUP $XDIR/${XPAC}-[0-9]*.t?z
	xpurgetmp $XPAC
	if [ "$XSUB" != '' ] ;then
            mv $XDIR/${XPAC}-[0-9]*i486*.t?z $XDIR/$XSUB
	fi
    fi
    if [ "$XSUB" = '' ] ;then
	upgradepkg --install-new --reinstall $XDIR/${XPAC}-[0-9]*.t?z
	rm -f /usr/lib64/lib*.la
    fi
}

# ===========================================================
rm -f /usr/lib64/lib*.la
# ===========================================================

if [ $ISOPENSHOT -eq 1 ] ;then
    # python2-* for openshot 1.4, openshot_qt => openshot 2.5
    for i in python2-mlt python2-libcaca python2-libwebp openal-soft \
			 libtxc_dxtn libgaminggear python-pillow6 acpibrightness \
			 python3-certifi openshot_qt ;do
	xmakepac packages/openshot $i
    done
    rm -rf packages/python-pillow
fi

if [ $ISPAC1 -eq 1 ] ;then    
    # mlt python3 recompiled with new libs.
    (
	rm -f packages*/*-3alien*.t?z
	rm -f packages/32/*-3alien*.t?z
	export BUILD=3alien
	xmakealienpac packages mlt
    )

    # 32 bits packages
    (
	export ARCH=i486
	for i in openal-soft libtxc_dxtn ;do
	    xmakepac packages $i 32
	done
    )

    (
	cd packages/32
	for i in cabextract libdvdcss icoutils wxPython openal-soft \
			    libtxc_dxtn ;do
	    if [ $RECOMP -eq 1 ] ;then
		convertpkg-compat32 -i "$i-"'*.t?z' -d ../compat32
		chown ${MYUSER}.$MYGROUP ../compat32/$i-compat32-*.t?z
	    fi
	    xpurgetmp ${i}-compat32
	    upgradepkg --install-new --reinstall ../compat32/$i-compat32-*.t?z
	    rm -f /usr/lib/lib*.la
	done
    )
    
    # Recompile and reinstall some Slackware packages for new dependencies.
    (
	export X264=yes
	export X265=yes
	export OPENAL=yes
	xmakealienpac source/l ffmpeg packages
    )
fi

if [ $ISPAC2 -eq 1 ] ;then    
    # More 64 bits packages
    for i in roccat-tools kmplayer denemo guile2.2 ;do
	xmakepac packages2 $i
    done
fi

if [ $ISPAC3 -eq 1 ] ;then    
    for i in bsddb3 db53 pyicu gramps ;do
	xmakepac packages3 $i
    done
fi

if [ $ISPAC4 -eq 1 ] ;then    
    for i in xrdp xorgxrdp SFML vbam fbida kaffeine opencv gradle \
		  signal-desktop audiveris zoom-linux opera ;do
	xmakepac packages4 $i
    done
    
    if [ -f /usr/lib64/chromium/libffmpeg.so ] ;then
	mv -f /usr/lib64/opera/libffmpeg.so /usr/lib64/opera/libffmpeg.so.bak
	ln -sf /usr/lib64/chromium/libffmpeg.so /usr/lib64/opera
    fi
    [ -f /usr/lib64/chromium/libwidevinecdm.so ] && \
	ln -sf /usr/lib64/chromium/libwidevinecdm.so /usr/lib64/opera
    
    xmakealienpac packages4 wxGTK3
fi

if [ $ISCHROMIUM -eq 1 ] ;then 
    (
	# Recompile for libffmpeg.so for Opera.
	export SHARED_FFMPEG=true
	export TMP=$(eval echo ~$MYUSER)/"pbtmp$$"
	echo "=> Compile in the $TMP directory"
	if [ $RECOMP -eq 1 -a -d "packages4/chromium" ] ;then
	(
	    cd "packages4/chromium"
	    cat ../../pbslacks/builds/chromium.patch|patch -p0
	)
	xmakealienpac packages4 chromium
	#rm -rf "$TMP"
    )
fi

if [ $ISAUDACITY -eq 1 ] ;then    
    for i in lilv lv2 serd sord sratom suil vamp-plugin-sdk audacity ;do
	xmakealienpac packages4/audacity $i
    done
fi

if [ $ISARDOUR -eq 1 ] ;then    
    for i in liblo liblrdf ardour ;do
	xmakealienpac packages4/ardour $i
    done
fi

mygt "Upgrade packages* done."
