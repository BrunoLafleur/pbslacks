#! /bin/sh

# Auteur : Pierre Brochard (pierre.brochard.1982@m4x.org)
# Date : 2019
# License : See the LICENSE file in this repository.

# Recompilations a faire apres reboot.

. "$(dirname $0)/pbinclude"
. "$(dirname $0)/pbupgradeinc"
. "$(dirname $0)/pbcompileinc"

if [ ! $UID = 0 ]; then
    mygt 'This script must be done as root. Exit.'
    exit 1
fi

xhelp () {
    mygt 'Launch this script in the directory including packages, packages2 et al.'
    echo
    echo '> pbslacks/$MYPROG'
}

if [ ! -d kde4 -o '(' ! -h pbslacks -a ! -d pbslacks ')' ] ;then
    xhelp
    exit 1
fi

MYUSER=produits
MYGROUP=users
RECOMP=1
ISALL=1
ISKDE4DEPS=0
ISKDE4=0
ISKDE4I=0

while [ $# -ge 1 ] ;do
    MYARG="$1"
    if [ "$MYARG" = "-u" ] ;then
	shift
	MYUSER="$1"
    elif [ "$MYARG" = "-g" ] ;then
	shift
	MYGROUP="$1"
    elif [ "$MYARG" = "-norecomp" ] ;then
        RECOMP=0
    elif [ "$MYARG" = "-iskde4deps" ] ;then
	ISKDE4DEPS=1;ISALL=0
    elif [ "$MYARG" = "-iskde4" ] ;then
	ISKDE4=1;ISALL=0
    elif [ "$MYARG" = "-iskde4i" ] ;then
	ISKDE4I=1;ISALL=0
    elif [ "$MYARG" = "-help" -o "$MYARG" = "-h" ] ;then
	xhelp
	exit 0
    fi
    shift
done

if [ $ISALL -eq 1 ] ;then
    ISKDE4DEPS=1
    ISKDE4=1
    ISKDE4I=1
fi

mygt 'Only after a system update and reboot.\nIf already done on this or another machine, this script is not useful.\nPress a touch for continue or abort.'|sed 's@\\n@\n@g'
read c

# ===========================================================
# Some helper functions.

xmakekdedep () {
    XSRC="$1"
    XPAC="$2"
    XCAT="$3"
    XSUB="$4"
    if [ $RECOMP -eq 1 ] ;then
	(
	    (
		cd kde4/source/$XCAT/$XSUB/$XPAC
		sh ./${XPAC}.SlackBuild
		if [ $? -ne 0 ] ;then
		    mygt 'Correct this error and relaunch this script. Press a key to end.'
		    cd ..;chown -R ${MYUSER}.$MYGROUP $XPAC
		    read c;exit 1
		fi
	    )
	    [ $? -ne 0 ] && exit 1
	    cd kde4;mkdir -p $XCAT;chown ${MYUSER}.$MYGROUP $XCAT;cd $XCAT
	    cp /tmp/${XPAC}-[0-9]*-x86_64-*.txz .
	    upgradepkg --install-new --reinstall ${XPAC}-[0-9]*-x86_64-*.txz
	    chown ${MYUSER}.$MYGROUP ${XPAC}-[0-9]*-x86_64-*.t?z
	    xpurgetmp "$XSRC";xpurgetmp "$XPAC"
	)
	[ $? -ne 0 ] && exit 1
    fi
}

# ===========================================================
rm -f $XLIBDIR/lib*.la
XNPROC=$(nproc)
export CMAKE_BUILD_PARALLEL_LEVEL=$XNPROC
export MAKEFLAGS="-j$XNPROC"
export PKGTYPE=txz
# ===========================================================

if [ $ISKDE4DEPS -eq 1 ] ;then
    export BUILD=1PB;export TAG=
    # Packages which has been replaced.
    # So I have modified them to not collide with the new ones.
    # KDE4 have been made aware of those modifications.
    xmakekdedep libappindicator libappindicator deps
    xmakekdedep LibRaw LibRaw18 deps
    xmakekdedep exiv2 exiv221 deps
    xmakekdedep sip sip422 deps
    xmakekdedep eigen eigen32 deps
    xmakekdedep eigen eigen20 deps
    xmakekdedep grantlee grantlee051 deps
    xmakekdedep phonon phonon4qt4 deps
    xmakekdedep phonon-gstreamer phonon-gstreamer deps
    xmakekdedep polkit-qt-1 polkit-qt4-1 deps
    xmakekdedep qca qca213 deps
    xmakekdedep libdbusmenu-qt libdbusmenu-qt4 deps
    xmakekdedep sni-qt sni-qt deps
    xmakekdedep poppler poppler-qt4 deps
    xmakekdedep cln cln deps
    xmakekdedep jasper jasper20 deps
    xmakekdedep gamin gamin01 deps
    xmakekdedep akonadi akonadi kdeother
    xmakekdedep smplayer smplayer kdeother

    # I have to re-add suppressed packages.
    # List is inside pbslacks/Slackpkg/blacklistkeepkde4
    for i in automoc4 glade3 libbluedevil liblastfm \
		     pm-utils qjson raptor2 redland scim scim-input-pad \
		     scim-pinyin soprano attica042 cgmanager \
		     gtk-xfce-engine orage qt qtwebkit PyQt qt-gstreamer \
		     qimageblitz qtscriptgenerator rasqal scim-anthy \
		     scim-hangul scim-m17n scim-tables strigi ;do
	xmakekdedep $i $i other
    done

    xhookkde4deps
fi

if [ $ISKDE4 -eq 1 ] ;then
    export BUILD=1;export TAG=_PB;export EXIT_ON_FAIL=yes
    (
	# Pour pykde4
	cd kde4/deps
	upgradepkg --install-new --reinstall sip422-[0-9]*-x86_64-*.txz
    )
    (
	cd kde4/source/kde
	# If we have ConsoleKit we inhibit for compilation.
	# After update, we could suppress it.
	if [ -d /usr/include/ConsoleKit ] ;then
	    rm -rf /usr/include/ConsoleKit.save
	    mv -f /usr/include/ConsoleKit /usr/include/ConsoleKit.save
	fi
	sh kde.SlackBuild # extragear:calligra
	#sh kde.SlackBuild kdegraphics:okular extragear:caligra
	#sh kde.SlackBuild kdelibs kdebase:nepomuk-core kdepimlibs kdebase kdesdk extragear:libkscreen kdegraphics kdebindings kdebase:kde-workspace kdeaccessibility kdeutils kdelibs kdemultimedia extragear:libktorrent kdenetwork oxygen-icons kdeadmin kdeartwork kdegames kdetoys kdepim kdepim-runtime kdenetwork:kopete kdeedu kdewebdev kdebase:kde-baseapps kdeplasma-addons polkit-kde extragear
	exit $?
    )
    ERR=$?
    echo "Return code from SlackBuild : $ERR"
    (
	cd kde4/kde
	for i in $(ls ../source/kde/modules) ;do
	    [ -d "/tmp/kde_build/$i" ] && cp "/tmp/kde_build/$i/"*.t?z .
	done
	cp /tmp/kde_build/*.t?z .
	chown ${MYUSER}.$MYGROUP *.t?z
	xpurgesrc 't?z'
    )
    if [ -d /usr/include/ConsoleKit.save ] ;then
	mv -f /usr/include/ConsoleKit.save /usr/include/ConsoleKit
    fi
    xhookkde4
    if [ $ERR -eq 0 ] ;then
	rm -rf /tmp/kde_build
    else
	exit 1
    fi
fi

if [ $ISKDE4I -eq 1 ] ;then
    export BUILD=1PB;export EXIT_ON_FAIL=yes
    (
	cd kde4/source/kdei/calligra-l10n
	sh calligra-l10n.SlackBuild
	ERR=$?
	cd ../../../kde
	cp /tmp/kde_build/*.t?z .
	upgradepkg --install-new --reinstall calligra-l10n-*.txz
	chown ${MYUSER}.$MYGROUP calligra-l10n-*.t?z
	exit $?
    )
    ERR=$?
    if [ $ERR -eq 0 ] ;then
	rm -rf /tmp/kde_build
	(
	    cd kde4/source/kdei/kde-l10n
	    sh kde-l10n.SlackBuild
	    ERR=$?
	    cd ../../../kde
	    cp /tmp/kde_build/*.t?z .
	    upgradepkg --install-new --reinstall kde-l10n-*.txz
	    chown ${MYUSER}.$MYGROUP kde-l10n-*.t?z
	    exit $?
	)
	ERR=$?
    fi
    if [ $ERR -eq 0 ] ;then
	rm -rf /tmp/kde_build
    fi
fi

mygt "Upgrade packages* done."
